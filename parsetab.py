
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLBRACERBRACEleftIDrightASSIGNMENTleftORleftANDleftNOTleftEQUALNOTEQUALGREATERGREATEROREQUALLESSLESSOREQUALleftCONSleftINleftPLUSMINUSleftTIMESDIVIDEDIVMODrightPOWERleftLIST_INDEXleftEOPrightUMINUSAND ASSIGNMENT COMMA CONS DIV DIVIDE ELSE EOP EQUAL FALSE GREATER GREATEROREQUAL ID IF IN LBRACE LESS LESSOREQUAL LPAREN L_CURLY MINUS MOD NOT NOTEQUAL NUMBER OR PLUS POUND POWER PRINT RBRACE RPAREN R_CURLY SEMICOLON STRING TIMES TRUE\n     block : L_CURLY statement_list R_CURLY\n    \n    statement : IF LPAREN expression RPAREN block ELSE block\n    \n    statement : IF LPAREN expression RPAREN block\n    \n     statement_list : statement_list statement\n    \n    statement_list : statement\n    \n        statement : expression SEMICOLON\n    \n    expression : LPAREN expression RPAREN\n    \n    statement : PRINT LPAREN expression RPAREN SEMICOLON\n    expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression POWER expression\n                   \n    boolean : expression GREATER expression\n            | expression LESS expression\n            | expression GREATEROREQUAL expression\n            | expression LESSOREQUAL expression\n            | expression EQUAL expression\n            | expression NOTEQUAL expression\n    \n    expression : expression AND expression\n    | expression OR expression\n    | NOT expression\n    \n    expression : expression CONS expression\n    \n    expression : expression LBRACE expression RBRACE %prec LIST_INDEX\n    \n    expression : expression IN expression\n    expression : factor\n    | STRING\n    | boolean\n    | list\n    | var\n    \n    var : ID\n    \n    var : ID ASSIGNMENT expression\n    \n    list_element : expression\n        | list_element expression\n    list_element : list_element COMMA\n    list : LBRACE list_element RBRACE\n        | LBRACE RBRACE\n    \n    boolean : TRUE\n        | FALSE\n    factor : MINUS factor %prec UMINUSexpression : expression EOP expressionfactor : NUMBER'
    
_lr_action_items = {'L_CURLY':([0,78,83,],[2,2,2,]),'$end':([1,21,],[0,-1,]),'IF':([2,3,4,21,22,25,81,82,84,],[5,5,-5,-1,-4,-6,-3,-8,-2,]),'PRINT':([2,3,4,21,22,25,81,82,84,],[8,8,-5,-1,-4,-6,-3,-8,-2,]),'LPAREN':([2,3,4,5,6,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,81,82,84,],[6,6,-5,23,6,45,6,6,-28,-29,-30,-31,-32,-44,-40,-41,-33,-1,-4,6,-6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-42,-24,6,-39,-35,6,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,-27,-43,-16,-17,-18,-19,-20,-21,-38,-36,-37,-34,-26,-3,-8,-2,]),'NOT':([2,3,4,6,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,81,82,84,],[10,10,-5,10,10,10,-28,-29,-30,-31,-32,-44,-40,-41,-33,-1,-4,10,-6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-42,-24,10,-39,-35,10,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,-27,-43,-16,-17,-18,-19,-20,-21,-38,-36,-37,-34,-26,-3,-8,-2,]),'STRING':([2,3,4,6,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,81,82,84,],[13,13,-5,13,13,13,-28,-29,-30,-31,-32,-44,-40,-41,-33,-1,-4,13,-6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-42,-24,13,-39,-35,13,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,-27,-43,-16,-17,-18,-19,-20,-21,-38,-36,-37,-34,-26,-3,-8,-2,]),'MINUS':([2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,84,],[9,9,-5,9,27,9,9,9,-28,-29,-30,-31,-32,-44,-40,-41,-33,-1,-4,9,27,-6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-42,27,9,-39,27,9,27,-7,-9,-10,-11,-12,-13,-14,-15,27,27,27,27,27,-43,27,27,27,27,27,27,27,-38,27,-37,27,-26,-3,-8,-2,]),'NUMBER':([2,3,4,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,81,82,84,],[17,17,-5,17,17,17,17,-28,-29,-30,-31,-32,-44,-40,-41,-33,-1,-4,17,-6,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-42,-24,17,-39,-35,17,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,-27,-43,-16,-17,-18,-19,-20,-21,-38,-36,-37,-34,-26,-3,-8,-2,]),'TRUE':([2,3,4,6,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,81,82,84,],[18,18,-5,18,18,18,-28,-29,-30,-31,-32,-44,-40,-41,-33,-1,-4,18,-6,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-42,-24,18,-39,-35,18,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,-27,-43,-16,-17,-18,-19,-20,-21,-38,-36,-37,-34,-26,-3,-8,-2,]),'FALSE':([2,3,4,6,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,81,82,84,],[19,19,-5,19,19,19,-28,-29,-30,-31,-32,-44,-40,-41,-33,-1,-4,19,-6,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-42,-24,19,-39,-35,19,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,-27,-43,-16,-17,-18,-19,-20,-21,-38,-36,-37,-34,-26,-3,-8,-2,]),'LBRACE':([2,3,4,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,81,82,84,],[11,11,-5,11,36,11,11,-28,-29,-30,-31,-32,-44,-40,-41,-33,-1,-4,11,36,-6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-42,-24,11,-39,36,11,36,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,36,-27,-43,-16,-17,-18,-19,-20,-21,36,-38,36,-37,-34,-26,-3,-8,-2,]),'ID':([2,3,4,6,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,81,82,84,],[20,20,-5,20,20,20,-28,-29,-30,-31,-32,-44,-40,-41,-33,-1,-4,20,-6,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-42,-24,20,-39,-35,20,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,-27,-43,-16,-17,-18,-19,-20,-21,-38,-36,-37,-34,-26,-3,-8,-2,]),'R_CURLY':([3,4,21,22,25,81,82,84,],[21,-5,-1,-4,-6,-3,-8,-2,]),'SEMICOLON':([7,12,13,14,15,16,17,18,19,20,46,47,49,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,77,79,80,],[25,-28,-29,-30,-31,-32,-44,-40,-41,-33,-42,-24,-39,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,-27,-43,-16,-17,-18,-19,-20,-21,-38,-34,-26,82,]),'PLUS':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[26,-28,-29,-30,-31,-32,-44,-40,-41,-33,26,-42,26,-39,26,26,-7,-9,-10,-11,-12,-13,-14,-15,26,26,26,26,26,-43,26,26,26,26,26,26,26,-38,26,26,-26,]),'TIMES':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[28,-28,-29,-30,-31,-32,-44,-40,-41,-33,28,-42,28,-39,28,28,-7,28,28,-11,-12,-13,-14,-15,28,28,28,28,28,-43,28,28,28,28,28,28,28,-38,28,28,-26,]),'DIVIDE':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[29,-28,-29,-30,-31,-32,-44,-40,-41,-33,29,-42,29,-39,29,29,-7,29,29,-11,-12,-13,-14,-15,29,29,29,29,29,-43,29,29,29,29,29,29,29,-38,29,29,-26,]),'DIV':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[30,-28,-29,-30,-31,-32,-44,-40,-41,-33,30,-42,30,-39,30,30,-7,30,30,-11,-12,-13,-14,-15,30,30,30,30,30,-43,30,30,30,30,30,30,30,-38,30,30,-26,]),'MOD':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[31,-28,-29,-30,-31,-32,-44,-40,-41,-33,31,-42,31,-39,31,31,-7,31,31,-11,-12,-13,-14,-15,31,31,31,31,31,-43,31,31,31,31,31,31,31,-38,31,31,-26,]),'POWER':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[32,-28,-29,-30,-31,-32,-44,-40,-41,-33,32,-42,32,-39,32,32,-7,32,32,32,32,32,32,32,32,32,32,32,32,-43,32,32,32,32,32,32,32,-38,32,32,-26,]),'AND':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[33,-28,-29,-30,-31,-32,-44,-40,-41,-33,33,-42,-24,-39,33,33,-7,-9,-10,-11,-12,-13,-14,-15,-22,33,-25,33,-27,-43,-16,-17,-18,-19,-20,-21,33,-38,33,33,-26,]),'OR':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[34,-28,-29,-30,-31,-32,-44,-40,-41,-33,34,-42,-24,-39,34,34,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,34,-27,-43,-16,-17,-18,-19,-20,-21,34,-38,34,34,-26,]),'CONS':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[35,-28,-29,-30,-31,-32,-44,-40,-41,-33,35,-42,35,-39,35,35,-7,-9,-10,-11,-12,-13,-14,-15,35,35,-25,35,-27,-43,35,35,35,35,35,35,35,-38,35,35,-26,]),'IN':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[37,-28,-29,-30,-31,-32,-44,-40,-41,-33,37,-42,37,-39,37,37,-7,-9,-10,-11,-12,-13,-14,-15,37,37,37,37,-27,-43,37,37,37,37,37,37,37,-38,37,37,-26,]),'EOP':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[38,-28,-29,-30,-31,-32,-44,-40,-41,-33,38,-42,38,-39,38,38,-7,38,38,38,38,38,38,38,38,38,38,38,38,-43,38,38,38,38,38,38,38,-38,38,38,-26,]),'GREATER':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[39,-28,-29,-30,-31,-32,-44,-40,-41,-33,39,-42,39,-39,39,39,-7,-9,-10,-11,-12,-13,-14,-15,39,39,-25,39,-27,-43,-16,-17,-18,-19,-20,-21,39,-38,39,39,-26,]),'LESS':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[40,-28,-29,-30,-31,-32,-44,-40,-41,-33,40,-42,40,-39,40,40,-7,-9,-10,-11,-12,-13,-14,-15,40,40,-25,40,-27,-43,-16,-17,-18,-19,-20,-21,40,-38,40,40,-26,]),'GREATEROREQUAL':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[41,-28,-29,-30,-31,-32,-44,-40,-41,-33,41,-42,41,-39,41,41,-7,-9,-10,-11,-12,-13,-14,-15,41,41,-25,41,-27,-43,-16,-17,-18,-19,-20,-21,41,-38,41,41,-26,]),'LESSOREQUAL':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[42,-28,-29,-30,-31,-32,-44,-40,-41,-33,42,-42,42,-39,42,42,-7,-9,-10,-11,-12,-13,-14,-15,42,42,-25,42,-27,-43,-16,-17,-18,-19,-20,-21,42,-38,42,42,-26,]),'EQUAL':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[43,-28,-29,-30,-31,-32,-44,-40,-41,-33,43,-42,43,-39,43,43,-7,-9,-10,-11,-12,-13,-14,-15,43,43,-25,43,-27,-43,-16,-17,-18,-19,-20,-21,43,-38,43,43,-26,]),'NOTEQUAL':([7,12,13,14,15,16,17,18,19,20,24,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,],[44,-28,-29,-30,-31,-32,-44,-40,-41,-33,44,-42,44,-39,44,44,-7,-9,-10,-11,-12,-13,-14,-15,44,44,-25,44,-27,-43,-16,-17,-18,-19,-20,-21,44,-38,44,44,-26,]),'RBRACE':([11,12,13,14,15,16,17,18,19,20,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,79,],[49,-28,-29,-30,-31,-32,-44,-40,-41,-33,-42,-24,74,-39,-35,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,79,-27,-43,-16,-17,-18,-19,-20,-21,-38,-36,-37,-34,-26,]),'RPAREN':([12,13,14,15,16,17,18,19,20,24,46,47,49,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,77,79,],[-28,-29,-30,-31,-32,-44,-40,-41,-33,53,-42,-24,-39,78,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,-27,-43,-16,-17,-18,-19,-20,-21,80,-38,-34,-26,]),'COMMA':([12,13,14,15,16,17,18,19,20,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,79,],[-28,-29,-30,-31,-32,-44,-40,-41,-33,-42,-24,76,-39,-35,-7,-9,-10,-11,-12,-13,-14,-15,-22,-23,-25,-27,-43,-16,-17,-18,-19,-20,-21,-38,-36,-37,-34,-26,]),'ASSIGNMENT':([20,],[51,]),'ELSE':([21,81,],[-1,83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,78,83,],[1,81,84,]),'statement_list':([2,],[3,]),'statement':([2,3,],[4,22,]),'expression':([2,3,6,10,11,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,51,],[7,7,24,47,50,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,77,]),'factor':([2,3,6,9,10,11,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,51,],[12,12,12,46,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'boolean':([2,3,6,10,11,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,51,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'list':([2,3,6,10,11,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,51,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'var':([2,3,6,10,11,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,51,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'list_element':([11,],[48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> L_CURLY statement_list R_CURLY','block',3,'p_block','sbml.py',496),
  ('statement -> IF LPAREN expression RPAREN block ELSE block','statement',7,'p_if_else','sbml.py',502),
  ('statement -> IF LPAREN expression RPAREN block','statement',5,'p_if','sbml.py',508),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sbml.py',515),
  ('statement_list -> statement','statement_list',1,'p_statement_list_val','sbml.py',521),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','sbml.py',527),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_parentheses','sbml.py',533),
  ('statement -> PRINT LPAREN expression RPAREN SEMICOLON','statement',5,'p_print_statement','sbml.py',539),
  ('expression -> expression PLUS expression','expression',3,'p_expression_op','sbml.py',544),
  ('expression -> expression MINUS expression','expression',3,'p_expression_op','sbml.py',545),
  ('expression -> expression TIMES expression','expression',3,'p_expression_op','sbml.py',546),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_op','sbml.py',547),
  ('expression -> expression DIV expression','expression',3,'p_expression_op','sbml.py',548),
  ('expression -> expression MOD expression','expression',3,'p_expression_op','sbml.py',549),
  ('expression -> expression POWER expression','expression',3,'p_expression_op','sbml.py',550),
  ('boolean -> expression GREATER expression','boolean',3,'p_comparison','sbml.py',556),
  ('boolean -> expression LESS expression','boolean',3,'p_comparison','sbml.py',557),
  ('boolean -> expression GREATEROREQUAL expression','boolean',3,'p_comparison','sbml.py',558),
  ('boolean -> expression LESSOREQUAL expression','boolean',3,'p_comparison','sbml.py',559),
  ('boolean -> expression EQUAL expression','boolean',3,'p_comparison','sbml.py',560),
  ('boolean -> expression NOTEQUAL expression','boolean',3,'p_comparison','sbml.py',561),
  ('expression -> expression AND expression','expression',3,'p_boolean_op','sbml.py',567),
  ('expression -> expression OR expression','expression',3,'p_boolean_op','sbml.py',568),
  ('expression -> NOT expression','expression',2,'p_boolean_op','sbml.py',569),
  ('expression -> expression CONS expression','expression',3,'p_cons','sbml.py',578),
  ('expression -> expression LBRACE expression RBRACE','expression',4,'p_index','sbml.py',584),
  ('expression -> expression IN expression','expression',3,'p_in_list','sbml.py',590),
  ('expression -> factor','expression',1,'p_expression','sbml.py',595),
  ('expression -> STRING','expression',1,'p_expression','sbml.py',596),
  ('expression -> boolean','expression',1,'p_expression','sbml.py',597),
  ('expression -> list','expression',1,'p_expression','sbml.py',598),
  ('expression -> var','expression',1,'p_expression','sbml.py',599),
  ('var -> ID','var',1,'p_variable','sbml.py',605),
  ('var -> ID ASSIGNMENT expression','var',3,'p_initialization','sbml.py',614),
  ('list_element -> expression','list_element',1,'p_list_elms','sbml.py',623),
  ('list_element -> list_element expression','list_element',2,'p_list_elms','sbml.py',624),
  ('list_element -> list_element COMMA','list_element',2,'p_list_elms_comma','sbml.py',633),
  ('list -> LBRACE list_element RBRACE','list',3,'p_list','sbml.py',638),
  ('list -> LBRACE RBRACE','list',2,'p_list','sbml.py',639),
  ('boolean -> TRUE','boolean',1,'p_boolean','sbml.py',648),
  ('boolean -> FALSE','boolean',1,'p_boolean','sbml.py',649),
  ('factor -> MINUS factor','factor',2,'p_expr_uminus','sbml.py',654),
  ('expression -> expression EOP expression','expression',3,'p_EOP','sbml.py',658),
  ('factor -> NUMBER','factor',1,'p_factor_number','sbml.py',662),
]
