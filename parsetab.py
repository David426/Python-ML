
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLBRACERBRACEleftIDrightASSIGNMENTleftORleftANDleftNOTleftEQUALNOTEQUALGREATERGREATEROREQUALLESSLESSOREQUALleftCONSleftINleftPLUSMINUSleftTIMESDIVIDEDIVMODrightPOWERleftLIST_INDEXleftEOPrightUMINUSAND ASSIGNMENT COMMA CONS DIV DIVIDE ELSE EOP EQUAL FALSE GREATER GREATEROREQUAL ID IF IN LBRACE LESS LESSOREQUAL LPAREN L_CURLY MINUS MOD NOT NOTEQUAL NUMBER OR PLUS POUND POWER PRINT RBRACE RPAREN R_CURLY SEMICOLON STRING TIMES TRUE WHILE\n     block : L_CURLY statement_list R_CURLY\n    \n    statement : WHILE LPAREN expression RPAREN block\n    \n    statement : IF LPAREN expression RPAREN block\n    \n    statement : IF LPAREN expression RPAREN block ELSE block\n    \n     statement_list : statement_list statement\n    \n    statement_list : statement\n    \n        statement : expression SEMICOLON\n    \n    expression : LPAREN expression RPAREN\n    \n    statement : PRINT LPAREN expression RPAREN SEMICOLON\n    expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression POWER expression\n                   \n    boolean : expression GREATER expression\n            | expression LESS expression\n            | expression GREATEROREQUAL expression\n            | expression LESSOREQUAL expression\n            | expression EQUAL expression\n            | expression NOTEQUAL expression\n    \n    expression : expression AND expression\n    | expression OR expression\n    | NOT expression\n    \n    expression : expression CONS expression\n    \n    expression : expression LBRACE expression RBRACE %prec LIST_INDEX\n    \n    expression : expression IN expression\n    expression : factor\n    | STRING\n    | boolean\n    | list\n    | var\n    \n    var : ID\n    \n    var : ID ASSIGNMENT expression\n    \n    list_element : expression\n        | list_element expression\n    list_element : list_element COMMA\n    list : LBRACE list_element RBRACE\n        | LBRACE RBRACE\n    \n    boolean : TRUE\n        | FALSE\n    factor : MINUS factor %prec UMINUSexpression : expression EOP expressionfactor : NUMBER'
    
_lr_action_items = {'L_CURLY':([0,81,83,88,],[2,2,2,2,]),'$end':([1,22,],[0,-1,]),'WHILE':([2,3,4,22,23,26,85,86,87,89,],[5,5,-6,-1,-5,-7,-2,-3,-9,-4,]),'IF':([2,3,4,22,23,26,85,86,87,89,],[8,8,-6,-1,-5,-7,-2,-3,-9,-4,]),'PRINT':([2,3,4,22,23,26,85,86,87,89,],[9,9,-6,-1,-5,-7,-2,-3,-9,-4,]),'LPAREN':([2,3,4,5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,77,78,79,80,82,85,86,87,89,],[6,6,-6,24,6,46,47,6,6,-29,-30,-31,-32,-33,-45,-41,-42,-34,-1,-5,6,-7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-43,-25,6,-40,-36,6,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,-28,-44,-17,-18,-19,-20,-21,-22,-39,-37,-38,-35,-27,-2,-3,-9,-4,]),'NOT':([2,3,4,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,77,78,79,80,82,85,86,87,89,],[11,11,-6,11,11,11,-29,-30,-31,-32,-33,-45,-41,-42,-34,-1,-5,11,-7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-43,-25,11,-40,-36,11,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,-28,-44,-17,-18,-19,-20,-21,-22,-39,-37,-38,-35,-27,-2,-3,-9,-4,]),'STRING':([2,3,4,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,77,78,79,80,82,85,86,87,89,],[14,14,-6,14,14,14,-29,-30,-31,-32,-33,-45,-41,-42,-34,-1,-5,14,-7,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-43,-25,14,-40,-36,14,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,-28,-44,-17,-18,-19,-20,-21,-22,-39,-37,-38,-35,-27,-2,-3,-9,-4,]),'MINUS':([2,3,4,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,85,86,87,89,],[10,10,-6,10,28,10,10,10,-29,-30,-31,-32,-33,-45,-41,-42,-34,-1,-5,10,28,-7,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-43,28,10,-40,28,10,28,-8,-10,-11,-12,-13,-14,-15,-16,28,28,28,28,28,-44,28,28,28,28,28,28,28,28,-39,28,-38,28,-27,-2,-3,-9,-4,]),'NUMBER':([2,3,4,6,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,77,78,79,80,82,85,86,87,89,],[18,18,-6,18,18,18,18,-29,-30,-31,-32,-33,-45,-41,-42,-34,-1,-5,18,-7,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-43,-25,18,-40,-36,18,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,-28,-44,-17,-18,-19,-20,-21,-22,-39,-37,-38,-35,-27,-2,-3,-9,-4,]),'TRUE':([2,3,4,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,77,78,79,80,82,85,86,87,89,],[19,19,-6,19,19,19,-29,-30,-31,-32,-33,-45,-41,-42,-34,-1,-5,19,-7,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-43,-25,19,-40,-36,19,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,-28,-44,-17,-18,-19,-20,-21,-22,-39,-37,-38,-35,-27,-2,-3,-9,-4,]),'FALSE':([2,3,4,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,77,78,79,80,82,85,86,87,89,],[20,20,-6,20,20,20,-29,-30,-31,-32,-33,-45,-41,-42,-34,-1,-5,20,-7,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-43,-25,20,-40,-36,20,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,-28,-44,-17,-18,-19,-20,-21,-22,-39,-37,-38,-35,-27,-2,-3,-9,-4,]),'LBRACE':([2,3,4,6,7,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,85,86,87,89,],[12,12,-6,12,37,12,12,-29,-30,-31,-32,-33,-45,-41,-42,-34,-1,-5,12,37,-7,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-43,-25,12,-40,37,12,37,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,37,-28,-44,-17,-18,-19,-20,-21,-22,37,37,-39,37,-38,-35,-27,-2,-3,-9,-4,]),'ID':([2,3,4,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,77,78,79,80,82,85,86,87,89,],[21,21,-6,21,21,21,-29,-30,-31,-32,-33,-45,-41,-42,-34,-1,-5,21,-7,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-43,-25,21,-40,-36,21,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,-28,-44,-17,-18,-19,-20,-21,-22,-39,-37,-38,-35,-27,-2,-3,-9,-4,]),'R_CURLY':([3,4,22,23,26,85,86,87,89,],[22,-6,-1,-5,-7,-2,-3,-9,-4,]),'SEMICOLON':([7,13,14,15,16,17,18,19,20,21,48,49,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,77,80,82,84,],[26,-29,-30,-31,-32,-33,-45,-41,-42,-34,-43,-25,-40,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,-28,-44,-17,-18,-19,-20,-21,-22,-39,-35,-27,87,]),'PLUS':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[27,-29,-30,-31,-32,-33,-45,-41,-42,-34,27,-43,27,-40,27,27,-8,-10,-11,-12,-13,-14,-15,-16,27,27,27,27,27,-44,27,27,27,27,27,27,27,27,-39,27,27,-27,]),'TIMES':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[29,-29,-30,-31,-32,-33,-45,-41,-42,-34,29,-43,29,-40,29,29,-8,29,29,-12,-13,-14,-15,-16,29,29,29,29,29,-44,29,29,29,29,29,29,29,29,-39,29,29,-27,]),'DIVIDE':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[30,-29,-30,-31,-32,-33,-45,-41,-42,-34,30,-43,30,-40,30,30,-8,30,30,-12,-13,-14,-15,-16,30,30,30,30,30,-44,30,30,30,30,30,30,30,30,-39,30,30,-27,]),'DIV':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[31,-29,-30,-31,-32,-33,-45,-41,-42,-34,31,-43,31,-40,31,31,-8,31,31,-12,-13,-14,-15,-16,31,31,31,31,31,-44,31,31,31,31,31,31,31,31,-39,31,31,-27,]),'MOD':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[32,-29,-30,-31,-32,-33,-45,-41,-42,-34,32,-43,32,-40,32,32,-8,32,32,-12,-13,-14,-15,-16,32,32,32,32,32,-44,32,32,32,32,32,32,32,32,-39,32,32,-27,]),'POWER':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[33,-29,-30,-31,-32,-33,-45,-41,-42,-34,33,-43,33,-40,33,33,-8,33,33,33,33,33,33,33,33,33,33,33,33,-44,33,33,33,33,33,33,33,33,-39,33,33,-27,]),'AND':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[34,-29,-30,-31,-32,-33,-45,-41,-42,-34,34,-43,-25,-40,34,34,-8,-10,-11,-12,-13,-14,-15,-16,-23,34,-26,34,-28,-44,-17,-18,-19,-20,-21,-22,34,34,-39,34,34,-27,]),'OR':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[35,-29,-30,-31,-32,-33,-45,-41,-42,-34,35,-43,-25,-40,35,35,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,35,-28,-44,-17,-18,-19,-20,-21,-22,35,35,-39,35,35,-27,]),'CONS':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[36,-29,-30,-31,-32,-33,-45,-41,-42,-34,36,-43,36,-40,36,36,-8,-10,-11,-12,-13,-14,-15,-16,36,36,-26,36,-28,-44,36,36,36,36,36,36,36,36,-39,36,36,-27,]),'IN':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[38,-29,-30,-31,-32,-33,-45,-41,-42,-34,38,-43,38,-40,38,38,-8,-10,-11,-12,-13,-14,-15,-16,38,38,38,38,-28,-44,38,38,38,38,38,38,38,38,-39,38,38,-27,]),'EOP':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[39,-29,-30,-31,-32,-33,-45,-41,-42,-34,39,-43,39,-40,39,39,-8,39,39,39,39,39,39,39,39,39,39,39,39,-44,39,39,39,39,39,39,39,39,-39,39,39,-27,]),'GREATER':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[40,-29,-30,-31,-32,-33,-45,-41,-42,-34,40,-43,40,-40,40,40,-8,-10,-11,-12,-13,-14,-15,-16,40,40,-26,40,-28,-44,-17,-18,-19,-20,-21,-22,40,40,-39,40,40,-27,]),'LESS':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[41,-29,-30,-31,-32,-33,-45,-41,-42,-34,41,-43,41,-40,41,41,-8,-10,-11,-12,-13,-14,-15,-16,41,41,-26,41,-28,-44,-17,-18,-19,-20,-21,-22,41,41,-39,41,41,-27,]),'GREATEROREQUAL':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[42,-29,-30,-31,-32,-33,-45,-41,-42,-34,42,-43,42,-40,42,42,-8,-10,-11,-12,-13,-14,-15,-16,42,42,-26,42,-28,-44,-17,-18,-19,-20,-21,-22,42,42,-39,42,42,-27,]),'LESSOREQUAL':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[43,-29,-30,-31,-32,-33,-45,-41,-42,-34,43,-43,43,-40,43,43,-8,-10,-11,-12,-13,-14,-15,-16,43,43,-26,43,-28,-44,-17,-18,-19,-20,-21,-22,43,43,-39,43,43,-27,]),'EQUAL':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[44,-29,-30,-31,-32,-33,-45,-41,-42,-34,44,-43,44,-40,44,44,-8,-10,-11,-12,-13,-14,-15,-16,44,44,-26,44,-28,-44,-17,-18,-19,-20,-21,-22,44,44,-39,44,44,-27,]),'NOTEQUAL':([7,13,14,15,16,17,18,19,20,21,25,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,],[45,-29,-30,-31,-32,-33,-45,-41,-42,-34,45,-43,45,-40,45,45,-8,-10,-11,-12,-13,-14,-15,-16,45,45,-26,45,-28,-44,-17,-18,-19,-20,-21,-22,45,45,-39,45,45,-27,]),'RBRACE':([12,13,14,15,16,17,18,19,20,21,48,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,80,82,],[51,-29,-30,-31,-32,-33,-45,-41,-42,-34,-43,-25,77,-40,-36,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,82,-28,-44,-17,-18,-19,-20,-21,-22,-39,-37,-38,-35,-27,]),'RPAREN':([13,14,15,16,17,18,19,20,21,25,48,49,51,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,80,82,],[-29,-30,-31,-32,-33,-45,-41,-42,-34,55,-43,-25,-40,81,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,-28,-44,-17,-18,-19,-20,-21,-22,83,84,-39,-35,-27,]),'COMMA':([13,14,15,16,17,18,19,20,21,48,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,77,78,79,80,82,],[-29,-30,-31,-32,-33,-45,-41,-42,-34,-43,-25,79,-40,-36,-8,-10,-11,-12,-13,-14,-15,-16,-23,-24,-26,-28,-44,-17,-18,-19,-20,-21,-22,-39,-37,-38,-35,-27,]),'ASSIGNMENT':([21,],[53,]),'ELSE':([22,86,],[-1,88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,81,83,88,],[1,85,86,89,]),'statement_list':([2,],[3,]),'statement':([2,3,],[4,23,]),'expression':([2,3,6,11,12,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,53,],[7,7,25,49,52,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,]),'factor':([2,3,6,10,11,12,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,53,],[13,13,13,48,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'boolean':([2,3,6,11,12,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,53,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'list':([2,3,6,11,12,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,53,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'var':([2,3,6,11,12,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,53,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'list_element':([12,],[50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> L_CURLY statement_list R_CURLY','block',3,'p_block','sbml.py',508),
  ('statement -> WHILE LPAREN expression RPAREN block','statement',5,'p_while','sbml.py',514),
  ('statement -> IF LPAREN expression RPAREN block','statement',5,'p_if','sbml.py',521),
  ('statement -> IF LPAREN expression RPAREN block ELSE block','statement',7,'p_if_else','sbml.py',528),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sbml.py',534),
  ('statement_list -> statement','statement_list',1,'p_statement_list_val','sbml.py',540),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','sbml.py',546),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_parentheses','sbml.py',552),
  ('statement -> PRINT LPAREN expression RPAREN SEMICOLON','statement',5,'p_print_statement','sbml.py',558),
  ('expression -> expression PLUS expression','expression',3,'p_expression_op','sbml.py',563),
  ('expression -> expression MINUS expression','expression',3,'p_expression_op','sbml.py',564),
  ('expression -> expression TIMES expression','expression',3,'p_expression_op','sbml.py',565),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_op','sbml.py',566),
  ('expression -> expression DIV expression','expression',3,'p_expression_op','sbml.py',567),
  ('expression -> expression MOD expression','expression',3,'p_expression_op','sbml.py',568),
  ('expression -> expression POWER expression','expression',3,'p_expression_op','sbml.py',569),
  ('boolean -> expression GREATER expression','boolean',3,'p_comparison','sbml.py',575),
  ('boolean -> expression LESS expression','boolean',3,'p_comparison','sbml.py',576),
  ('boolean -> expression GREATEROREQUAL expression','boolean',3,'p_comparison','sbml.py',577),
  ('boolean -> expression LESSOREQUAL expression','boolean',3,'p_comparison','sbml.py',578),
  ('boolean -> expression EQUAL expression','boolean',3,'p_comparison','sbml.py',579),
  ('boolean -> expression NOTEQUAL expression','boolean',3,'p_comparison','sbml.py',580),
  ('expression -> expression AND expression','expression',3,'p_boolean_op','sbml.py',586),
  ('expression -> expression OR expression','expression',3,'p_boolean_op','sbml.py',587),
  ('expression -> NOT expression','expression',2,'p_boolean_op','sbml.py',588),
  ('expression -> expression CONS expression','expression',3,'p_cons','sbml.py',597),
  ('expression -> expression LBRACE expression RBRACE','expression',4,'p_index','sbml.py',603),
  ('expression -> expression IN expression','expression',3,'p_in_list','sbml.py',609),
  ('expression -> factor','expression',1,'p_expression','sbml.py',614),
  ('expression -> STRING','expression',1,'p_expression','sbml.py',615),
  ('expression -> boolean','expression',1,'p_expression','sbml.py',616),
  ('expression -> list','expression',1,'p_expression','sbml.py',617),
  ('expression -> var','expression',1,'p_expression','sbml.py',618),
  ('var -> ID','var',1,'p_variable','sbml.py',624),
  ('var -> ID ASSIGNMENT expression','var',3,'p_initialization','sbml.py',633),
  ('list_element -> expression','list_element',1,'p_list_elms','sbml.py',642),
  ('list_element -> list_element expression','list_element',2,'p_list_elms','sbml.py',643),
  ('list_element -> list_element COMMA','list_element',2,'p_list_elms_comma','sbml.py',652),
  ('list -> LBRACE list_element RBRACE','list',3,'p_list','sbml.py',657),
  ('list -> LBRACE RBRACE','list',2,'p_list','sbml.py',658),
  ('boolean -> TRUE','boolean',1,'p_boolean','sbml.py',667),
  ('boolean -> FALSE','boolean',1,'p_boolean','sbml.py',668),
  ('factor -> MINUS factor','factor',2,'p_expr_uminus','sbml.py',673),
  ('expression -> expression EOP expression','expression',3,'p_EOP','sbml.py',677),
  ('factor -> NUMBER','factor',1,'p_factor_number','sbml.py',681),
]
