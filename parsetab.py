
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLBRACERBRACEleftORleftANDleftNOTleftEQUALNOTEQUALGREATERGREATEROREQUALLESSLESSOREQUALleftPLUSMINUSleftTIMESDIVIDEDIVrightPOWERleftEOPrightUMINUSAND COMMA CONS DIV DIVIDE EOP EQUAL FALSE GREATER GREATEROREQUAL IN LBRACE LESS LESSOREQUAL LPAREN MINUS MOD NOT NOTEQUAL NUMBER OR PLUS POUND POWER RBRACE RPAREN SEMICOLON STRING TIMES TRUEstatement : expression SEMICOLON\n         | boolean SEMICOLON\n         | list SEMICOLON\n    statement : string_exp SEMICOLON\n    \n    factor : LPAREN expression RPAREN\n    \n    string_exp : string_exp PLUS string_exp\n    list :  list PLUS list\n    string_exp : STRINGexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression POWER expression\n                   factor : MINUS expression %prec UMINUSexpression : expression EOP expressionexpression : factorfactor : NUMBER\n    boolean : expression EQUAL expression\n        | expression NOTEQUAL expression\n        | boolean EQUAL boolean\n        | boolean NOTEQUAL boolean\n    \n    boolean : expression GREATER factor\n            | expression LESS factor\n            | expression GREATEROREQUAL factor\n            | expression LESSOREQUAL factor\n            | expression EQUAL factor\n            | string_exp GREATER string_exp\n            | string_exp LESS string_exp\n            | string_exp GREATEROREQUAL string_exp\n            | string_exp LESSOREQUAL string_exp\n            | string_exp EQUAL string_exp\n\n    \n    boolean : boolean AND boolean\n        | boolean OR boolean\n    boolean : NOT boolean\n    boolean : TRUE\n        | FALSE\n    \n    list_element : expression\n        | string_exp\n        | boolean\n        | list\n    \n    list_element : list_element expression\n    | list_element string_exp\n    | list_element boolean\n    | list_element list\n    list_element : list_element COMMA\n    list : LBRACE list_element RBRACE\n        | LBRACE RBRACE\n    \n    expression : list LBRACE expression RBRACE\n        | string_exp LBRACE expression RBRACE\n        | expression LBRACE expression RBRACE\n    \n    list : expression CONS list\n        | boolean CONS list\n        | string_exp CONS list\n        | list CONS list\n    \n    boolean : expression IN list\n        | boolean IN list\n        | string_exp IN list\n        | STRING IN list\n        | list IN list\n        | string_exp IN STRING\n        | STRING IN STRING\n    '
    
_lr_action_items = {'NOT':([0,6,7,8,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,26,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,55,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[9,9,-18,9,9,-37,-38,9,-19,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-16,-8,9,-49,-39,-40,-41,-42,-36,9,-9,-10,-11,-12,-13,-14,-15,-17,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,-35,-58,-54,-61,-7,-56,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,-43,-44,-45,-46,-47,-63,-60,-5,-52,-50,-51,]),'TRUE':([0,6,7,8,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,26,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,55,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[10,10,-18,10,10,-37,-38,10,-19,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-16,-8,10,-49,-39,-40,-41,-42,-36,10,-9,-10,-11,-12,-13,-14,-15,-17,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,-35,-58,-54,-61,-7,-56,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,-43,-44,-45,-46,-47,-63,-60,-5,-52,-50,-51,]),'FALSE':([0,6,7,8,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,26,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,55,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[11,11,-18,11,11,-37,-38,11,-19,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-16,-8,11,-49,-39,-40,-41,-42,-36,11,-9,-10,-11,-12,-13,-14,-15,-17,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,-35,-58,-54,-61,-7,-56,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,-43,-44,-45,-46,-47,-63,-60,-5,-52,-50,-51,]),'STRING':([0,6,7,8,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,26,31,32,34,35,36,37,38,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[12,59,-18,59,12,-37,-38,59,-19,59,59,59,59,59,59,59,59,59,59,59,12,12,12,12,12,12,12,12,59,12,12,12,59,104,104,104,104,104,110,12,104,-16,-8,59,-49,-39,-40,-41,-42,-36,119,-9,-10,-11,-12,-13,-14,-15,-17,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,-35,-58,-54,-61,-7,-56,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,-43,-44,-45,-46,-47,-63,-60,-5,-52,-50,-51,]),'LBRACE':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[8,24,41,46,8,-18,8,8,-37,-38,-8,8,-19,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-16,41,46,-8,8,-49,24,46,-41,41,-36,24,46,41,8,24,-9,-10,-11,-12,-13,24,-15,-17,24,-20,-18,-21,-24,-25,-26,-27,24,41,46,41,-22,-23,-34,-35,41,41,24,41,-7,41,24,-29,-8,-30,-31,-32,-33,41,-8,41,-6,-48,24,46,-45,41,-47,-8,41,-5,-52,-50,-51,]),'LPAREN':([0,6,7,8,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,55,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[13,13,-18,13,13,-37,-38,13,-19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-16,-8,13,-49,-39,-40,-41,-42,-36,13,-9,-10,-11,-12,-13,-14,-15,-17,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,-35,-58,-54,-61,-7,-56,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,-43,-44,-45,-46,-47,-63,-60,-5,-52,-50,-51,]),'MINUS':([0,2,6,7,8,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,55,59,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[6,17,6,-18,6,6,-37,-38,6,-19,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-16,-8,6,-49,17,-40,-41,-42,-36,17,6,17,-9,-10,-11,-12,-13,17,-15,-17,17,17,-18,17,-24,-25,-26,-27,17,-57,-53,-22,-23,-34,-35,-58,-54,17,-61,-7,-56,17,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,17,-44,-45,-46,-47,-63,-60,-5,-52,-50,-51,]),'NUMBER':([0,6,7,8,9,10,11,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,55,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[14,14,-18,14,14,-37,-38,14,-19,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-16,-8,14,-49,-39,-40,-41,-42,-36,14,-9,-10,-11,-12,-13,-14,-15,-17,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,-35,-58,-54,-61,-7,-56,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,-43,-44,-45,-46,-47,-63,-60,-5,-52,-50,-51,]),'$end':([1,15,33,40,45,],[0,-1,-2,-3,-4,]),'SEMICOLON':([2,3,4,5,7,10,11,12,14,55,61,66,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,119,120,121,122,123,124,],[15,33,40,45,-18,-37,-38,-8,-19,-16,-49,-36,-9,-10,-11,-12,-13,-14,-15,-17,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,-35,-58,-54,-61,-7,-56,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,-63,-60,-5,-52,-50,-51,]),'PLUS':([2,4,5,7,12,14,55,56,57,59,61,62,63,65,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,119,120,121,122,123,124,],[16,43,54,-18,-8,-19,-16,43,54,-8,-49,16,54,43,16,54,43,16,-9,-10,-11,-12,-13,16,-15,-17,16,16,-18,16,16,43,54,43,43,43,16,43,-7,43,16,54,-8,54,54,54,54,43,-8,43,-6,-48,16,54,43,-8,43,-5,-52,-50,-51,]),'TIMES':([2,7,14,55,62,67,71,72,73,74,75,76,77,78,79,80,81,82,83,88,98,102,114,121,122,123,124,],[18,-18,-19,-16,18,18,18,18,18,-11,-12,-13,18,-15,-17,18,18,-18,18,18,18,18,18,-5,-52,-50,-51,]),'DIVIDE':([2,7,14,55,62,67,71,72,73,74,75,76,77,78,79,80,81,82,83,88,98,102,114,121,122,123,124,],[19,-18,-19,-16,19,19,19,19,19,-11,-12,-13,19,-15,-17,19,19,-18,19,19,19,19,19,-5,-52,-50,-51,]),'DIV':([2,7,14,55,62,67,71,72,73,74,75,76,77,78,79,80,81,82,83,88,98,102,114,121,122,123,124,],[20,-18,-19,-16,20,20,20,20,20,-11,-12,-13,20,-15,-17,20,20,-18,20,20,20,20,20,-5,-52,-50,-51,]),'MOD':([2,7,14,55,62,67,71,72,73,74,75,76,77,78,79,80,81,82,83,88,98,102,114,121,122,123,124,],[21,-18,-19,-16,21,21,21,-9,-10,-11,-12,-13,21,-15,-17,21,21,-18,21,21,21,21,21,-5,-52,-50,-51,]),'POWER':([2,7,14,55,62,67,71,72,73,74,75,76,77,78,79,80,81,82,83,88,98,102,114,121,122,123,124,],[22,-18,-19,-16,22,22,22,22,22,22,22,22,22,22,-17,22,22,-18,22,22,22,22,22,-5,-52,-50,-51,]),'EOP':([2,7,14,55,62,67,71,72,73,74,75,76,77,78,79,80,81,82,83,88,98,102,114,121,122,123,124,],[23,-18,-19,-16,23,23,23,23,23,23,23,23,23,23,-17,23,23,-18,23,23,23,23,23,-5,-52,-50,-51,]),'EQUAL':([2,3,5,7,10,11,12,14,55,57,58,59,61,62,63,64,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,120,121,122,123,124,],[25,34,51,-18,-37,-38,-8,-19,-16,51,34,-8,-49,25,51,34,34,25,51,25,-9,-10,-11,-12,-13,25,-15,-17,25,-20,-18,-21,-24,-25,-26,-27,25,-57,51,-53,-22,-23,34,34,-58,-54,25,-61,-7,-56,25,-29,-8,-30,-31,-32,-33,-59,-8,-55,-6,-48,25,51,34,-8,-60,-5,-52,-50,-51,]),'NOTEQUAL':([2,3,7,10,11,14,55,58,61,62,64,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,119,120,121,122,123,124,],[26,35,-18,-37,-38,-19,-16,35,-49,26,35,35,26,26,-9,-10,-11,-12,-13,26,-15,-17,26,-20,-18,-21,-24,-25,-26,-27,26,-57,-53,-22,-23,35,35,-58,-54,26,-61,-7,-56,26,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,26,35,-63,-60,-5,-52,-50,-51,]),'GREATER':([2,5,7,12,14,55,57,59,62,63,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,88,90,98,102,104,110,112,114,115,119,121,122,123,124,],[27,47,-18,-8,-19,-16,47,-8,27,47,27,47,27,-9,-10,-11,-12,-13,27,-15,-17,27,27,-18,27,27,47,27,27,-8,-8,-6,27,47,-8,-5,-52,-50,-51,]),'LESS':([2,5,7,12,14,55,57,59,62,63,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,88,90,98,102,104,110,112,114,115,119,121,122,123,124,],[28,48,-18,-8,-19,-16,48,-8,28,48,28,48,28,-9,-10,-11,-12,-13,28,-15,-17,28,28,-18,28,28,48,28,28,-8,-8,-6,28,48,-8,-5,-52,-50,-51,]),'GREATEROREQUAL':([2,5,7,12,14,55,57,59,62,63,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,88,90,98,102,104,110,112,114,115,119,121,122,123,124,],[29,49,-18,-8,-19,-16,49,-8,29,49,29,49,29,-9,-10,-11,-12,-13,29,-15,-17,29,29,-18,29,29,49,29,29,-8,-8,-6,29,49,-8,-5,-52,-50,-51,]),'LESSOREQUAL':([2,5,7,12,14,55,57,59,62,63,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,88,90,98,102,104,110,112,114,115,119,121,122,123,124,],[30,50,-18,-8,-19,-16,50,-8,30,50,30,50,30,-9,-10,-11,-12,-13,30,-15,-17,30,30,-18,30,30,50,30,30,-8,-8,-6,30,50,-8,-5,-52,-50,-51,]),'IN':([2,3,4,5,7,10,11,12,14,55,56,57,58,59,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,],[31,38,42,52,-18,-37,-38,70,-19,-16,42,52,38,70,-49,31,52,38,42,-36,31,52,42,31,-9,-10,-11,-12,-13,31,-15,-17,31,-20,-18,-21,-24,-25,-26,-27,31,42,52,42,-22,-23,-34,-35,42,42,31,42,-7,42,31,-29,-8,-30,-31,-32,-33,42,70,42,-6,-48,31,52,38,42,70,42,-5,-52,-50,-51,]),'CONS':([2,3,4,5,7,10,11,12,14,55,56,57,58,59,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,],[32,39,44,53,-18,-37,-38,-8,-19,-16,44,53,39,-8,-49,32,53,39,44,-36,32,53,44,32,-9,-10,-11,-12,-13,32,-15,-17,32,-20,-18,-21,-24,-25,-26,-27,32,44,53,44,-22,-23,-34,-35,44,44,32,44,-7,44,32,-29,-8,-30,-31,-32,-33,44,-8,44,-6,-48,32,53,39,44,-8,44,-5,-52,-50,-51,]),'AND':([3,7,10,11,14,55,58,61,64,66,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,116,119,120,121,122,123,124,],[36,-18,-37,-38,-19,-16,36,-49,36,-36,-9,-10,-11,-12,-13,-14,-15,-17,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,36,-58,-54,-61,-7,-56,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,36,-63,-60,-5,-52,-50,-51,]),'OR':([3,7,10,11,14,55,58,61,64,66,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,116,119,120,121,122,123,124,],[37,-18,-37,-38,-19,-16,37,-49,37,-36,-9,-10,-11,-12,-13,-14,-15,-17,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,-35,-58,-54,-61,-7,-56,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,37,-63,-60,-5,-52,-50,-51,]),'RBRACE':([7,8,10,11,14,55,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[-18,61,-37,-38,-19,-16,-8,113,-49,-39,-40,-41,-42,-36,-9,-10,-11,-12,-13,-14,-15,-17,122,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,-35,-58,-54,123,-61,-7,-56,124,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,-43,-44,-45,-46,-47,-63,-60,-5,-52,-50,-51,]),'COMMA':([7,10,11,14,55,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[-18,-37,-38,-19,-16,-8,118,-49,-39,-40,-41,-42,-36,-9,-10,-11,-12,-13,-14,-15,-17,-20,-18,-21,-24,-25,-26,-27,-57,-53,-22,-23,-34,-35,-58,-54,-61,-7,-56,-29,-8,-30,-31,-32,-33,-59,-62,-55,-6,-48,-43,-44,-45,-46,-47,-63,-60,-5,-52,-50,-51,]),'RPAREN':([7,14,55,71,72,73,74,75,76,77,78,79,121,122,123,124,],[-18,-19,-16,121,-9,-10,-11,-12,-13,-14,-15,-17,-5,-52,-50,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,6,8,9,13,16,17,18,19,20,21,22,23,24,25,26,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,60,70,],[2,55,62,67,71,72,73,74,75,76,77,78,79,80,81,83,88,88,67,67,67,67,88,88,98,88,88,88,102,88,88,114,88,]),'boolean':([0,6,8,9,13,16,17,18,19,20,21,22,23,24,25,26,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,60,70,],[3,58,64,66,58,58,58,58,58,58,58,58,58,58,58,58,58,58,92,93,94,95,58,58,58,58,58,58,58,58,58,116,58,]),'list':([0,6,8,9,13,16,17,18,19,20,21,22,23,24,25,26,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,60,70,],[4,56,65,69,56,56,56,56,56,56,56,56,56,56,56,56,89,91,69,69,69,69,96,97,56,99,100,101,56,109,111,117,120,]),'string_exp':([0,6,8,9,13,16,17,18,19,20,21,22,23,24,25,26,31,32,34,35,36,37,38,39,41,42,43,44,46,47,48,49,50,51,52,53,54,60,70,],[5,57,63,68,57,57,57,57,57,57,57,57,57,57,57,57,90,90,68,68,68,68,90,90,57,90,90,90,57,103,105,106,107,108,90,90,112,115,90,]),'factor':([0,6,8,9,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,52,53,60,70,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,82,7,84,85,86,87,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'list_element':([8,],[60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_exp','sbml.py',300),
  ('statement -> boolean SEMICOLON','statement',2,'p_statement_exp','sbml.py',301),
  ('statement -> list SEMICOLON','statement',2,'p_statement_exp','sbml.py',302),
  ('statement -> string_exp SEMICOLON','statement',2,'p_string_exp','sbml.py',307),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_parenthesis','sbml.py',314),
  ('string_exp -> string_exp PLUS string_exp','string_exp',3,'p_concat','sbml.py',320),
  ('list -> list PLUS list','list',3,'p_concat','sbml.py',321),
  ('string_exp -> STRING','string_exp',1,'p_string_expression','sbml.py',326),
  ('expression -> expression PLUS expression','expression',3,'p_expression_op','sbml.py',331),
  ('expression -> expression MINUS expression','expression',3,'p_expression_op','sbml.py',332),
  ('expression -> expression TIMES expression','expression',3,'p_expression_op','sbml.py',333),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_op','sbml.py',334),
  ('expression -> expression DIV expression','expression',3,'p_expression_op','sbml.py',335),
  ('expression -> expression MOD expression','expression',3,'p_expression_op','sbml.py',336),
  ('expression -> expression POWER expression','expression',3,'p_expression_op','sbml.py',337),
  ('factor -> MINUS expression','factor',2,'p_expr_uminus','sbml.py',343),
  ('expression -> expression EOP expression','expression',3,'p_EOP','sbml.py',347),
  ('expression -> factor','expression',1,'p_expression_factor','sbml.py',351),
  ('factor -> NUMBER','factor',1,'p_factor_number','sbml.py',356),
  ('boolean -> expression EQUAL expression','boolean',3,'p_equal','sbml.py',361),
  ('boolean -> expression NOTEQUAL expression','boolean',3,'p_equal','sbml.py',362),
  ('boolean -> boolean EQUAL boolean','boolean',3,'p_equal','sbml.py',363),
  ('boolean -> boolean NOTEQUAL boolean','boolean',3,'p_equal','sbml.py',364),
  ('boolean -> expression GREATER factor','boolean',3,'p_comparison','sbml.py',370),
  ('boolean -> expression LESS factor','boolean',3,'p_comparison','sbml.py',371),
  ('boolean -> expression GREATEROREQUAL factor','boolean',3,'p_comparison','sbml.py',372),
  ('boolean -> expression LESSOREQUAL factor','boolean',3,'p_comparison','sbml.py',373),
  ('boolean -> expression EQUAL factor','boolean',3,'p_comparison','sbml.py',374),
  ('boolean -> string_exp GREATER string_exp','boolean',3,'p_comparison','sbml.py',375),
  ('boolean -> string_exp LESS string_exp','boolean',3,'p_comparison','sbml.py',376),
  ('boolean -> string_exp GREATEROREQUAL string_exp','boolean',3,'p_comparison','sbml.py',377),
  ('boolean -> string_exp LESSOREQUAL string_exp','boolean',3,'p_comparison','sbml.py',378),
  ('boolean -> string_exp EQUAL string_exp','boolean',3,'p_comparison','sbml.py',379),
  ('boolean -> boolean AND boolean','boolean',3,'p_boolean_op','sbml.py',386),
  ('boolean -> boolean OR boolean','boolean',3,'p_boolean_op','sbml.py',387),
  ('boolean -> NOT boolean','boolean',2,'p_boolean_not','sbml.py',392),
  ('boolean -> TRUE','boolean',1,'p_boolean','sbml.py',397),
  ('boolean -> FALSE','boolean',1,'p_boolean','sbml.py',398),
  ('list_element -> expression','list_element',1,'p_list_elms','sbml.py',404),
  ('list_element -> string_exp','list_element',1,'p_list_elms','sbml.py',405),
  ('list_element -> boolean','list_element',1,'p_list_elms','sbml.py',406),
  ('list_element -> list','list_element',1,'p_list_elms','sbml.py',407),
  ('list_element -> list_element expression','list_element',2,'p_list_elms_cont','sbml.py',413),
  ('list_element -> list_element string_exp','list_element',2,'p_list_elms_cont','sbml.py',414),
  ('list_element -> list_element boolean','list_element',2,'p_list_elms_cont','sbml.py',415),
  ('list_element -> list_element list','list_element',2,'p_list_elms_cont','sbml.py',416),
  ('list_element -> list_element COMMA','list_element',2,'p_list_elms_comma','sbml.py',422),
  ('list -> LBRACE list_element RBRACE','list',3,'p_list','sbml.py',427),
  ('list -> LBRACE RBRACE','list',2,'p_list','sbml.py',428),
  ('expression -> list LBRACE expression RBRACE','expression',4,'p_index','sbml.py',437),
  ('expression -> string_exp LBRACE expression RBRACE','expression',4,'p_index','sbml.py',438),
  ('expression -> expression LBRACE expression RBRACE','expression',4,'p_index','sbml.py',439),
  ('list -> expression CONS list','list',3,'p_cons','sbml.py',447),
  ('list -> boolean CONS list','list',3,'p_cons','sbml.py',448),
  ('list -> string_exp CONS list','list',3,'p_cons','sbml.py',449),
  ('list -> list CONS list','list',3,'p_cons','sbml.py',450),
  ('boolean -> expression IN list','boolean',3,'p_in_list','sbml.py',457),
  ('boolean -> boolean IN list','boolean',3,'p_in_list','sbml.py',458),
  ('boolean -> string_exp IN list','boolean',3,'p_in_list','sbml.py',459),
  ('boolean -> STRING IN list','boolean',3,'p_in_list','sbml.py',460),
  ('boolean -> list IN list','boolean',3,'p_in_list','sbml.py',461),
  ('boolean -> string_exp IN STRING','boolean',3,'p_in_list','sbml.py',462),
  ('boolean -> STRING IN STRING','boolean',3,'p_in_list','sbml.py',463),
]
