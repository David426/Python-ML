
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLBRACERBRACEleftORleftANDleftNOTleftEQUALNOTEQUALGREATERGREATEROREQUALLESSLESSOREQUALleftCONSleftINleftPLUSMINUSleftTIMESDIVIDEDIVMODrightPOWERleftLIST_INDEXleftEOPrightUMINUSAND COMMA CONS DIV DIVIDE EOP EQUAL FALSE GREATER GREATEROREQUAL IN LBRACE LESS LESSOREQUAL LPAREN MINUS MOD NOT NOTEQUAL NUMBER OR PLUS POUND POWER RBRACE RPAREN SEMICOLON STRING TIMES TRUEstatement : expression SEMICOLON\n         | boolean SEMICOLON\n         | list SEMICOLON\n    statement : string_exp SEMICOLON\n    \n    expression : LPAREN expression RPAREN\n    string_exp : LPAREN string_exp RPAREN\n    \n    string_exp : string_exp PLUS string_exp\n    list :  list PLUS list\n    string_exp : STRINGexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression POWER expression\n                   factor : MINUS expression %prec UMINUSexpression : expression EOP expressionexpression : factorfactor : NUMBER\n    boolean : boolean EQUAL boolean\n        | boolean NOTEQUAL boolean\n    \n    boolean : expression GREATER expression\n            | expression LESS expression\n            | expression GREATEROREQUAL expression\n            | expression LESSOREQUAL expression\n            | expression EQUAL expression\n            | expression NOTEQUAL expression\n            | string_exp GREATER string_exp\n            | string_exp LESS string_exp\n            | string_exp GREATEROREQUAL string_exp\n            | string_exp LESSOREQUAL string_exp\n            | string_exp EQUAL string_exp\n            | string_exp NOTEQUAL string_exp\n    \n    boolean : boolean AND boolean\n        | boolean OR boolean\n    boolean : NOT boolean\n    boolean : TRUE\n        | FALSE\n    \n    list_element : expression\n        | string_exp\n        | boolean\n        | list\n    \n    list_element : list_element expression\n    | list_element string_exp\n    | list_element boolean\n    | list_element list\n    list_element : list_element COMMA\n    list : LBRACE list_element RBRACE\n        | LBRACE RBRACE\n    \n    expression : list LBRACE expression RBRACE %prec LIST_INDEX\n        | string_exp LBRACE expression RBRACE %prec LIST_INDEX\n        | expression LBRACE expression RBRACE %prec LIST_INDEX\n    \n    list : expression CONS list\n        | boolean CONS list\n        | string_exp CONS list\n        | list CONS list\n    \n    boolean : expression IN list\n        | boolean IN list\n        | string_exp IN list\n        | STRING IN list\n        | list IN list\n        | string_exp IN string_exp\n        | STRING IN STRING\n        | expression IN STRING\n    '
    
_lr_action_items = {'LPAREN':([0,6,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,61,63,64,65,66,67,68,69,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[6,6,6,-19,6,6,-38,-39,-20,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,106,106,106,106,106,106,115,6,106,-9,-17,6,-50,-40,-41,-42,-43,-37,6,-10,-11,-12,-13,-14,-15,-16,-18,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,-36,-59,-55,-62,-8,-57,-29,106,-9,-30,-31,-32,-33,-34,-63,-60,115,-56,-7,-5,-6,-49,-44,-45,-46,-47,-48,-64,-61,-53,-51,-52,]),'NOT':([0,6,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,53,54,59,61,63,64,65,66,67,68,69,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,101,102,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[10,10,10,-19,10,10,-38,-39,-20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-9,-17,10,-50,-40,-41,-42,-43,-37,10,-10,-11,-12,-13,-14,-15,-16,-18,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,-36,-59,-55,-62,-8,-57,-29,-9,-30,-31,-32,-33,-34,-63,-60,10,-56,-7,-5,-6,-49,-44,-45,-46,-47,-48,-64,-61,-53,-51,-52,]),'TRUE':([0,6,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,53,54,59,61,63,64,65,66,67,68,69,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,101,102,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[11,11,11,-19,11,11,-38,-39,-20,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-9,-17,11,-50,-40,-41,-42,-43,-37,11,-10,-11,-12,-13,-14,-15,-16,-18,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,-36,-59,-55,-62,-8,-57,-29,-9,-30,-31,-32,-33,-34,-63,-60,11,-56,-7,-5,-6,-49,-44,-45,-46,-47,-48,-64,-61,-53,-51,-52,]),'FALSE':([0,6,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,53,54,59,61,63,64,65,66,67,68,69,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,101,102,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[12,12,12,-19,12,12,-38,-39,-20,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-9,-17,12,-50,-40,-41,-42,-43,-37,12,-10,-11,-12,-13,-14,-15,-16,-18,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,-36,-59,-55,-62,-8,-57,-29,-9,-30,-31,-32,-33,-34,-63,-60,12,-56,-7,-5,-6,-49,-44,-45,-46,-47,-48,-64,-61,-53,-51,-52,]),'STRING':([0,6,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,61,63,64,65,66,67,68,69,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[13,59,59,-19,59,13,-38,-39,-20,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,91,13,13,13,13,13,13,13,59,13,13,13,59,107,107,107,107,107,107,59,13,107,-9,-17,59,-50,-40,-41,-42,-43,-37,126,-10,-11,-12,-13,-14,-15,-16,-18,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,-36,-59,-55,-62,-8,-57,-29,107,-9,-30,-31,-32,-33,-34,-63,-60,59,-56,-7,-5,-6,-49,-44,-45,-46,-47,-48,-64,-61,-53,-51,-52,]),'LBRACE':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,],[9,24,41,46,9,9,-19,9,9,-38,-39,-9,-20,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,24,46,41,-9,-17,46,9,-50,24,46,-42,41,-37,24,46,41,9,-10,-11,-12,-13,-14,-15,-16,-18,24,-23,-24,-25,-26,-27,-28,24,-58,-9,46,-54,-21,-22,-35,-36,-59,-55,24,-62,-8,-57,24,-29,-9,-30,-31,-32,-33,-34,-63,-60,9,-56,-7,-5,-6,-49,24,46,-46,41,-48,-9,-61,-53,-51,-52,46,]),'MINUS':([0,2,6,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,53,54,56,59,61,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[7,17,7,7,-19,7,7,-38,-39,-20,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,17,-9,-17,7,-50,17,-41,-42,-43,-37,17,7,-10,-11,-12,-13,-14,-15,-16,-18,17,17,17,17,17,17,17,17,-58,-65,-54,-21,-22,-35,-36,-59,-55,17,-62,-8,-57,17,-29,-9,-30,-31,-32,-33,-34,-63,-60,7,-56,-7,-5,-6,-49,17,-45,-46,-47,-48,-64,-61,-53,-51,-52,]),'NUMBER':([0,6,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,53,54,59,61,63,64,65,66,67,68,69,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,101,102,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[14,14,14,-19,14,14,-38,-39,-20,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-9,-17,14,-50,-40,-41,-42,-43,-37,14,-10,-11,-12,-13,-14,-15,-16,-18,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,-36,-59,-55,-62,-8,-57,-29,-9,-30,-31,-32,-33,-34,-63,-60,14,-56,-7,-5,-6,-49,-44,-45,-46,-47,-48,-64,-61,-53,-51,-52,]),'$end':([1,15,33,40,45,],[0,-1,-2,-3,-4,]),'SEMICOLON':([2,3,4,5,8,11,12,13,14,59,61,64,69,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,101,102,103,105,107,108,109,110,111,112,113,114,116,117,118,119,120,126,127,128,129,130,],[15,33,40,45,-19,-38,-39,-9,-20,-9,-17,-50,-37,-10,-11,-12,-13,-14,-15,-16,-18,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,-36,-59,-55,-62,-8,-57,-29,-9,-30,-31,-32,-33,-34,-63,-60,-56,-7,-5,-6,-49,-64,-61,-53,-51,-52,]),'PLUS':([2,4,5,8,13,14,56,57,58,59,61,62,64,65,66,68,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,124,126,127,128,129,130,131,132,],[16,43,55,-19,-9,-20,16,55,43,-9,-17,55,-50,16,55,43,16,55,43,-10,-11,-12,-13,-14,-15,-16,-18,16,16,16,16,16,16,16,16,43,-9,55,43,43,43,16,43,-8,43,16,55,-9,55,55,55,55,55,55,43,43,-7,-5,-6,-49,16,55,43,-9,43,-53,-51,-52,55,55,]),'TIMES':([2,8,14,56,61,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,100,104,118,121,128,129,130,],[18,-19,-20,18,-17,18,18,18,18,-12,-13,-14,-15,-16,-18,18,18,18,18,18,18,18,18,18,18,-5,18,-53,-51,-52,]),'DIVIDE':([2,8,14,56,61,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,100,104,118,121,128,129,130,],[19,-19,-20,19,-17,19,19,19,19,-12,-13,-14,-15,-16,-18,19,19,19,19,19,19,19,19,19,19,-5,19,-53,-51,-52,]),'DIV':([2,8,14,56,61,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,100,104,118,121,128,129,130,],[20,-19,-20,20,-17,20,20,20,20,-12,-13,-14,-15,-16,-18,20,20,20,20,20,20,20,20,20,20,-5,20,-53,-51,-52,]),'MOD':([2,8,14,56,61,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,100,104,118,121,128,129,130,],[21,-19,-20,21,-17,21,21,21,21,-12,-13,-14,-15,-16,-18,21,21,21,21,21,21,21,21,21,21,-5,21,-53,-51,-52,]),'POWER':([2,8,14,56,61,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,100,104,118,121,128,129,130,],[22,-19,-20,22,-17,22,22,22,22,22,22,22,22,22,-18,22,22,22,22,22,22,22,22,22,22,-5,22,-53,-51,-52,]),'EOP':([2,8,14,56,61,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,100,104,118,121,128,129,130,],[23,-19,-20,23,-17,23,23,23,23,23,23,23,23,23,-18,23,23,23,23,23,23,23,23,23,23,-5,23,-53,-51,-52,]),'GREATER':([2,5,8,13,14,56,57,59,61,62,65,66,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,100,104,107,113,117,118,119,121,122,126,128,129,130,132,],[25,47,-19,-9,-20,25,47,-9,-17,47,25,47,25,47,-10,-11,-12,-13,-14,-15,-16,-18,25,25,25,25,25,25,25,25,-9,47,25,25,-9,47,-7,-5,-6,25,47,-9,-53,-51,-52,47,]),'LESS':([2,5,8,13,14,56,57,59,61,62,65,66,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,100,104,107,113,117,118,119,121,122,126,128,129,130,132,],[26,48,-19,-9,-20,26,48,-9,-17,48,26,48,26,48,-10,-11,-12,-13,-14,-15,-16,-18,26,26,26,26,26,26,26,26,-9,48,26,26,-9,48,-7,-5,-6,26,48,-9,-53,-51,-52,48,]),'GREATEROREQUAL':([2,5,8,13,14,56,57,59,61,62,65,66,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,100,104,107,113,117,118,119,121,122,126,128,129,130,132,],[27,49,-19,-9,-20,27,49,-9,-17,49,27,49,27,49,-10,-11,-12,-13,-14,-15,-16,-18,27,27,27,27,27,27,27,27,-9,49,27,27,-9,49,-7,-5,-6,27,49,-9,-53,-51,-52,49,]),'LESSOREQUAL':([2,5,8,13,14,56,57,59,61,62,65,66,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,100,104,107,113,117,118,119,121,122,126,128,129,130,132,],[28,50,-19,-9,-20,28,50,-9,-17,50,28,50,28,50,-10,-11,-12,-13,-14,-15,-16,-18,28,28,28,28,28,28,28,28,-9,50,28,28,-9,50,-7,-5,-6,28,50,-9,-53,-51,-52,50,]),'EQUAL':([2,3,5,8,11,12,13,14,56,57,59,60,61,62,64,65,66,67,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,126,127,128,129,130,132,],[29,34,51,-19,-38,-39,-9,-20,29,51,-9,34,-17,51,-50,29,51,34,34,29,51,-10,-11,-12,-13,-14,-15,-16,-18,29,-23,-24,-25,-26,-27,-28,29,-58,-9,51,-54,-21,-22,34,34,-59,-55,29,-62,-8,-57,29,-29,-9,-30,-31,-32,-33,-34,-63,-60,-56,-7,-5,-6,-49,29,51,34,-9,-61,-53,-51,-52,51,]),'NOTEQUAL':([2,3,5,8,11,12,13,14,56,57,59,60,61,62,64,65,66,67,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,126,127,128,129,130,132,],[30,35,52,-19,-38,-39,-9,-20,30,52,-9,35,-17,52,-50,30,52,35,35,30,52,-10,-11,-12,-13,-14,-15,-16,-18,30,-23,-24,-25,-26,-27,-28,30,-58,-9,52,-54,-21,-22,35,35,-59,-55,30,-62,-8,-57,30,-29,-9,-30,-31,-32,-33,-34,-63,-60,-56,-7,-5,-6,-49,30,52,35,-9,-61,-53,-51,-52,52,]),'IN':([2,3,4,5,8,11,12,13,14,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,126,127,128,129,130,132,],[31,38,42,53,-19,-38,-39,73,-20,31,53,42,73,38,-17,53,-50,31,53,38,42,38,31,53,42,-10,-11,-12,-13,-14,-15,-16,-18,31,31,31,31,31,31,31,31,-58,73,53,42,38,38,38,38,-59,42,31,-62,-8,42,31,-29,-9,-30,-31,-32,-33,-34,-63,-60,42,-7,-5,-6,-49,31,53,38,42,73,-61,-53,-51,-52,53,]),'CONS':([2,3,4,5,8,11,12,13,14,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,126,127,128,129,130,132,],[32,39,44,54,-19,-38,-39,-9,-20,32,54,44,-9,39,-17,54,-50,32,54,39,44,39,32,54,44,-10,-11,-12,-13,-14,-15,-16,-18,32,32,32,32,32,32,32,32,-58,-9,54,-54,39,39,39,39,-59,-55,32,-62,-8,-57,32,-29,-9,-30,-31,-32,-33,-34,-63,-60,-56,-7,-5,-6,-49,32,54,39,44,-9,-61,-53,-51,-52,54,]),'AND':([3,8,11,12,14,59,60,61,64,67,69,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,101,102,103,105,107,108,109,110,111,112,113,114,116,117,118,119,120,123,126,127,128,129,130,],[36,-19,-38,-39,-20,-9,36,-17,-50,36,-37,-10,-11,-12,-13,-14,-15,-16,-18,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,36,-59,-55,-62,-8,-57,-29,-9,-30,-31,-32,-33,-34,-63,-60,-56,-7,-5,-6,-49,36,-64,-61,-53,-51,-52,]),'OR':([3,8,11,12,14,59,60,61,64,67,69,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,101,102,103,105,107,108,109,110,111,112,113,114,116,117,118,119,120,123,126,127,128,129,130,],[37,-19,-38,-39,-20,-9,37,-17,-50,37,-37,-10,-11,-12,-13,-14,-15,-16,-18,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,-36,-59,-55,-62,-8,-57,-29,-9,-30,-31,-32,-33,-34,-63,-60,-56,-7,-5,-6,-49,37,-64,-61,-53,-51,-52,]),'RPAREN':([8,14,56,57,59,61,74,75,76,77,78,79,80,81,107,117,118,119,128,129,130,131,132,],[-19,-20,118,119,-9,-17,-10,-11,-12,-13,-14,-15,-16,-18,-9,-7,-5,-6,-53,-51,-52,119,119,]),'RBRACE':([8,9,11,12,14,59,61,63,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[-19,64,-38,-39,-20,-9,-17,120,-50,-40,-41,-42,-43,-37,-10,-11,-12,-13,-14,-15,-16,-18,128,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,-36,-59,-55,129,-62,-8,-57,130,-29,-9,-30,-31,-32,-33,-34,-63,-60,-56,-7,-5,-6,-49,-44,-45,-46,-47,-48,-64,-61,-53,-51,-52,]),'COMMA':([8,11,12,14,59,61,63,64,65,66,67,68,69,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,93,94,95,96,97,98,99,101,102,103,105,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[-19,-38,-39,-20,-9,-17,125,-50,-40,-41,-42,-43,-37,-10,-11,-12,-13,-14,-15,-16,-18,-23,-24,-25,-26,-27,-28,-58,-65,-54,-21,-22,-35,-36,-59,-55,-62,-8,-57,-29,-9,-30,-31,-32,-33,-34,-63,-60,-56,-7,-5,-6,-49,-44,-45,-46,-47,-48,-64,-61,-53,-51,-52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,6,7,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,53,54,63,73,115,],[2,56,61,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,89,70,70,70,70,89,89,100,89,89,89,104,89,89,121,89,56,]),'boolean':([0,6,7,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,53,54,63,73,115,],[3,60,60,67,69,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,94,95,96,97,60,60,60,60,60,60,60,60,60,123,60,60,]),'list':([0,6,7,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,53,54,63,73,115,],[4,58,58,68,72,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,90,93,72,72,72,72,98,99,58,101,102,103,58,114,116,124,127,58,]),'string_exp':([0,6,7,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,63,73,106,115,],[5,57,62,66,71,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,92,92,71,71,71,71,92,92,62,92,92,92,62,105,108,109,110,111,112,113,92,117,122,92,131,132,]),'factor':([0,6,7,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,46,53,54,63,73,115,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'list_element':([9,],[63,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_exp','sbml.py',304),
  ('statement -> boolean SEMICOLON','statement',2,'p_statement_exp','sbml.py',305),
  ('statement -> list SEMICOLON','statement',2,'p_statement_exp','sbml.py',306),
  ('statement -> string_exp SEMICOLON','statement',2,'p_string_exp','sbml.py',311),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_parenthesis','sbml.py',318),
  ('string_exp -> LPAREN string_exp RPAREN','string_exp',3,'p_parenthesis','sbml.py',319),
  ('string_exp -> string_exp PLUS string_exp','string_exp',3,'p_concat','sbml.py',325),
  ('list -> list PLUS list','list',3,'p_concat','sbml.py',326),
  ('string_exp -> STRING','string_exp',1,'p_string_expression','sbml.py',331),
  ('expression -> expression PLUS expression','expression',3,'p_expression_op','sbml.py',335),
  ('expression -> expression MINUS expression','expression',3,'p_expression_op','sbml.py',336),
  ('expression -> expression TIMES expression','expression',3,'p_expression_op','sbml.py',337),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_op','sbml.py',338),
  ('expression -> expression DIV expression','expression',3,'p_expression_op','sbml.py',339),
  ('expression -> expression MOD expression','expression',3,'p_expression_op','sbml.py',340),
  ('expression -> expression POWER expression','expression',3,'p_expression_op','sbml.py',341),
  ('factor -> MINUS expression','factor',2,'p_expr_uminus','sbml.py',347),
  ('expression -> expression EOP expression','expression',3,'p_EOP','sbml.py',351),
  ('expression -> factor','expression',1,'p_expression_factor','sbml.py',355),
  ('factor -> NUMBER','factor',1,'p_factor_number','sbml.py',360),
  ('boolean -> boolean EQUAL boolean','boolean',3,'p_equal','sbml.py',365),
  ('boolean -> boolean NOTEQUAL boolean','boolean',3,'p_equal','sbml.py',366),
  ('boolean -> expression GREATER expression','boolean',3,'p_comparison','sbml.py',372),
  ('boolean -> expression LESS expression','boolean',3,'p_comparison','sbml.py',373),
  ('boolean -> expression GREATEROREQUAL expression','boolean',3,'p_comparison','sbml.py',374),
  ('boolean -> expression LESSOREQUAL expression','boolean',3,'p_comparison','sbml.py',375),
  ('boolean -> expression EQUAL expression','boolean',3,'p_comparison','sbml.py',376),
  ('boolean -> expression NOTEQUAL expression','boolean',3,'p_comparison','sbml.py',377),
  ('boolean -> string_exp GREATER string_exp','boolean',3,'p_comparison','sbml.py',378),
  ('boolean -> string_exp LESS string_exp','boolean',3,'p_comparison','sbml.py',379),
  ('boolean -> string_exp GREATEROREQUAL string_exp','boolean',3,'p_comparison','sbml.py',380),
  ('boolean -> string_exp LESSOREQUAL string_exp','boolean',3,'p_comparison','sbml.py',381),
  ('boolean -> string_exp EQUAL string_exp','boolean',3,'p_comparison','sbml.py',382),
  ('boolean -> string_exp NOTEQUAL string_exp','boolean',3,'p_comparison','sbml.py',383),
  ('boolean -> boolean AND boolean','boolean',3,'p_boolean_op','sbml.py',393),
  ('boolean -> boolean OR boolean','boolean',3,'p_boolean_op','sbml.py',394),
  ('boolean -> NOT boolean','boolean',2,'p_boolean_not','sbml.py',399),
  ('boolean -> TRUE','boolean',1,'p_boolean','sbml.py',404),
  ('boolean -> FALSE','boolean',1,'p_boolean','sbml.py',405),
  ('list_element -> expression','list_element',1,'p_list_elms','sbml.py',411),
  ('list_element -> string_exp','list_element',1,'p_list_elms','sbml.py',412),
  ('list_element -> boolean','list_element',1,'p_list_elms','sbml.py',413),
  ('list_element -> list','list_element',1,'p_list_elms','sbml.py',414),
  ('list_element -> list_element expression','list_element',2,'p_list_elms_cont','sbml.py',420),
  ('list_element -> list_element string_exp','list_element',2,'p_list_elms_cont','sbml.py',421),
  ('list_element -> list_element boolean','list_element',2,'p_list_elms_cont','sbml.py',422),
  ('list_element -> list_element list','list_element',2,'p_list_elms_cont','sbml.py',423),
  ('list_element -> list_element COMMA','list_element',2,'p_list_elms_comma','sbml.py',429),
  ('list -> LBRACE list_element RBRACE','list',3,'p_list','sbml.py',434),
  ('list -> LBRACE RBRACE','list',2,'p_list','sbml.py',435),
  ('expression -> list LBRACE expression RBRACE','expression',4,'p_index','sbml.py',444),
  ('expression -> string_exp LBRACE expression RBRACE','expression',4,'p_index','sbml.py',445),
  ('expression -> expression LBRACE expression RBRACE','expression',4,'p_index','sbml.py',446),
  ('list -> expression CONS list','list',3,'p_cons','sbml.py',455),
  ('list -> boolean CONS list','list',3,'p_cons','sbml.py',456),
  ('list -> string_exp CONS list','list',3,'p_cons','sbml.py',457),
  ('list -> list CONS list','list',3,'p_cons','sbml.py',458),
  ('boolean -> expression IN list','boolean',3,'p_in_list','sbml.py',465),
  ('boolean -> boolean IN list','boolean',3,'p_in_list','sbml.py',466),
  ('boolean -> string_exp IN list','boolean',3,'p_in_list','sbml.py',467),
  ('boolean -> STRING IN list','boolean',3,'p_in_list','sbml.py',468),
  ('boolean -> list IN list','boolean',3,'p_in_list','sbml.py',469),
  ('boolean -> string_exp IN string_exp','boolean',3,'p_in_list','sbml.py',470),
  ('boolean -> STRING IN STRING','boolean',3,'p_in_list','sbml.py',471),
  ('boolean -> expression IN STRING','boolean',3,'p_in_list','sbml.py',472),
]
